@using Wohnungstausch24.Core
@using Wohnungstausch24.Core.EnumExtensions
@using Wohnungstausch24.Models.Enums
@using Wohnungstausch24.Models.ViewModels.Listings.Steps.Step3.Base
@using Wohnungstausch24.Resources
@using Wohnungstausch24.Web.Mvc.Helpers
@model Wohnungstausch24.Models.ViewModels.Listings.Steps.Step3.Step3ViewModel
@{
    Layout = "~/Areas/Agent/Views/Shared/_Layout.cshtml";
}
<div class="site site--dashboard">
    <div class="site__main">
        <div class="widget js-widget widget--dashboard">
            <div class="widget__header">
                <h2 class="widget__title">@Resource.Add_New_Property</h2>
            </div>
            <div class="widget__content">
                <section class="form-property form-property--dashboard">
                    @Html.Partial("HouseForSale/_Steps", Model.StepsProgressModel)
                    <div class="form-property__content">
                        @using (Html.BeginForm("Step3", "Property", FormMethod.Post, new { @class = "form form--flex form--property-add js-form js-form-property" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            @Html.HiddenFor(m => m.Id)
                            <div class="row">
                                <div class="form-group form-group--col-3">
                                    <div class="form-group--col-12">
                                        <i class="fa fa-3x fa-calendar" style="color: #015bbb"></i>
                                    </div>
                                    <div class="form-group--col-12">
                                        <h4>@Resource.General_Date</h4>
                                    </div>
                                </div>
                                <div class="form-group--col-9">
                                    <div class="row">
                                        <div class="form-group form-group--col-4">
                                            @Html.LabelFor(m => m.Step3HouseForSale.IsCurrentlyRented, new { @class = "control-label" })
                                            @Html.ToggleButtonFor(m => m.Step3HouseForSale.IsCurrentlyRented, new ToggleOptions { OnShowClass = "actualrent-area-div" })
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.IsCurrentlyRented, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4" id="actualrent-area-div"></div>

                                    </div>
                                    <div class="row actualrent-area-div">
                                        <div class="form-group form-group--col-4">
                                            @Html.LabelFor(m => m.Step3HouseForSale.IsActualContractTerminated, new { @class = "control-label" })
                                            @Html.CheckBoxFor(m => m.Step3HouseForSale.IsActualContractTerminated, new { @class = "in-checkbox", data_toggle = "toggle", data_on = Resource.Yes, data_off = Resource.No, data_onstyle = "success", data_offstyle = "danger" })
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.IsActualContractTerminated, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4" id="terminated-area-div">
                                            @Html.EditorFor(m => m.Step3HouseForSale.ActualContractTerminatedOn)
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.ActualContractTerminatedOn, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group--col-12">
                                            <h4>@string.Format(Resource.Property_Add_Step3_When_Is_The_0_Available, Resource.General_House) </h4>
                                            <div class="row">
                                                <div class="form-group form-group--col-4">
                                                    @Html.EditorFor(m => m.Step3HouseForSale.EarliestAvailableDate)
                                                    @Html.ValidationMessageFor(m => m.Step3HouseForSale.EarliestAvailableDate, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group form-group--col-4">
                                                    @Html.EditorFor(m => m.Step3HouseForSale.LatestAvailableDate)
                                                    @Html.ValidationMessageFor(m => m.Step3HouseForSale.LatestAvailableDate, null, new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="form-group form-group--col-9">
                                                    @Html.LabelFor(m => m.Step3HouseForSale.FreeTextAvailableFrom, new { @class = "control-label" })
                                                    @Html.TextBoxFor(m => m.Step3HouseForSale.FreeTextAvailableFrom, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.Step3HouseForSale.FreeTextAvailableFrom, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-10">
                                                    <div class="col-md-8">
                                                        @Html.LabelFor(m => m.Step3HouseForSale.IsDateFlexible, new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-4">
                                                        @Html.CheckBoxFor(m => m.Step3HouseForSale.IsDateFlexible, new { @class = "in-checkbox", data_toggle = "toggle", data_on = Resource.Yes, data_off = Resource.No, data_onstyle = "success", data_offstyle = "danger" })
                                                        @Html.ValidationMessageFor(m => m.Step3FlatForSale.IsDateFlexible, null, new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="form-group form-group--col-3">
                                    <div class="form-group--col-12">
                                        <i class="fa fa-3x fa-line-chart" style="color: #015bbb"></i>
                                    </div>
                                    <div class="form-group--col-12">
                                        <h4>@Resource.Current_rent_information</h4>
                                    </div>
                                </div>
                                <div class="form-group--col-9">
                                    <div class="row">
                                        <div class="form-group form-group--col-4 currently-rented-info">
                                            @Html.LabelFor(m => m.Step3HouseForSale.CurrentColdRent, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.CurrentColdRent, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.CurrentColdRent, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 currently-rented-info">
                                            @Html.LabelFor(m => m.Step3HouseForSale.AdditionalCosts, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.AdditionalCosts, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.AdditionalCosts, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 wt24-is-contract-terminated">
                                            @Html.LabelFor(m => m.Step3HouseForSale.RentalIncomeActual, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.RentalIncomeActual, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.RentalIncomeActual, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 wt24-is-contract-terminated">
                                            @Html.LabelFor(m => m.Step3HouseForSale.RentalIncomeDebit, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.RentalIncomeDebit, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.RentalIncomeDebit, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 wt24-is-contract-terminated">
                                            @Html.LabelFor(m => m.Step3HouseForSale.XTimes, new { @class = "control-label" })
                                            <div class="input-group">
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.XTimes, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.XTimes, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 wt24-is-contract-terminated">
                                            @Html.LabelFor(m => m.Step3HouseForSale.NetYield, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-percent"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.NetYield, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.NetYield, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 wt24-is-contract-terminated">
                                            @Html.LabelFor(m => m.Step3HouseForSale.NetYieldDebit, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-percent"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.NetYieldDebit, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.NetYieldDebit, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4 wt24-is-contract-terminated">
                                            @Html.LabelFor(m => m.Step3HouseForSale.NetYieldActual, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-percent"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.NetYieldActual, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.NetYieldActual, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="form-group form-group--col-3">
                                    <div class="form-group--col-12">
                                        <i class="fa fa-3x fa-euro" style="color: #015bbb"></i>
                                    </div>
                                </div>
                                <div class="form-group--col-9">
                                    <div class="row">
                                        <div class="form-group form-group--col-4">
                                            @Html.LabelFor(m => m.Step3HouseForSale.IsPriceOnDemand, new { @class = "control-label" })
                                            @Html.ToggleButtonFor(m => m.Step3HouseForSale.IsPriceOnDemand, new ToggleOptions
                                        {
                                            OnShowId = "orientation-price"
                                        })
                                        </div>
                                        <div class="form-group form-group--col-4">
                                            @Html.LabelFor(m => m.Step3HouseForSale.Price, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.Price, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.Price, null, new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group form-group--col-4" id="orientation-price">
                                            @Html.LabelFor(m => (m.Step3HouseForSale).OrientationPrice, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => (m.Step3HouseForSale).OrientationPrice, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => (m.Step3HouseForSale).OrientationPrice, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="alert alert-info">
                                            <i class="fa fa-3x fa-exclamation-triangle pull-left"></i><p>If an(-other) agent introduces the final buyer to you, how much commission fee would you accept to pay?</p>
                                        </div>
                                        <div class="form-group form-group--col-12">
                                            <div class="col-md-8">@Html.LabelFor(m => m.Step3HouseForSale.IsWillingToPay, new { @class = "control-label" })</div>
                                            <div class="col-md-4">@Html.ToggleButtonFor(m => m.Step3HouseForSale.IsWillingToPay,new ToggleOptions {OnShowId = "inside-cortage-willing-to-pay" })</div>
                                        </div>
                                        <div class="form-group form-group--col-4" id="inside-cortage-willing-to-pay">
                                            @Html.LabelFor(m => m.Step3HouseForSale.InsideCourtage, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.InsideCourtage, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.InsideCourtage, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group form-group--col-12">
                                            <div class="col-md-8">@Html.LabelFor(m => m.Step3HouseForSale.IsSubjectToCommission, new { @class = "control-label" })</div>
                                            <div class="col-md-4">
                                                @Html.ToggleButtonFor(m => m.Step3HouseForSale.IsSubjectToCommission, new ToggleOptions { OnShowId = "outside-cortage-willing-to-pay" })
                                            </div>
                                        </div>
                                        <div class="form-group form-group--col-4" id="outside-cortage-willing-to-pay">
                                            @Html.LabelFor(m => m.Step3HouseForSale.OutsideCourtage, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.OutsideCourtage, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.OutsideCourtage, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group form-group--col-12" id="courtage-advice-text">
                                        @Html.LabelFor(m => m.Step3HouseForSale.CourtageAdvice, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Step3HouseForSale.CourtageAdvice, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Step3HouseForSale.CourtageAdvice, null, new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group form-group--col-12">
                                        <div class="form-group form-group--col-4">
                                            @Html.LabelFor(m => m.Step3HouseForSale.CommonCharge, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.CommonCharge, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.CommonCharge, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group form-group--col-4">
                                            @Html.LabelFor(m => m.Step3HouseForSale.MaintenanceSavings, new { @class = "control-label" })
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-euro"></i></span>
                                                @Html.TextBoxFor(m => m.Step3HouseForSale.MaintenanceSavings, new { @class = "form-control", min = 0 })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Step3HouseForSale.MaintenanceSavings, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <a class="form__submit" href="@Url.Action("Step2", "Property", new {id = Model.Id})"><i class="fa fa-angle-left"></i>@Resource.Back</a>
                                <button type="submit" class="form__submit">@Resource.Next <i class="fa fa-angle-right"></i></button>
                            </div>
                        }
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        var isRentedCheckBox = $('#@Html.IdFor(m => m.Step3HouseForSale.IsCurrentlyRented)');
        isRentedCheckBox.change(function () {
            if ($(this).prop('checked')) {
                $('.currently-rented-info').show('slow');
            } else {
                $('.currently-rented-info').hide('slow');
            }
        });

        var insideCourtage = $('#@Html.IdFor(m => m.Step3HouseForSale.IsWillingToPay)');
        var outsideCourtage = $('#@Html.IdFor(m => m.Step3HouseForSale.IsSubjectToCommission)');


        if (!insideCourtage.prop('checked') && !outsideCourtage.prop('checked')) {
            $('#courtage-advice-text').hide('slow');
        } else {
            $('#courtage-advice-text').show('slow');
        }

        insideCourtage.change(function () {
            if (!$(this).prop('checked') && !outsideCourtage.prop('checked')) {
                $('#courtage-advice-text').hide('slow');
            } else {
                $('#courtage-advice-text').show('slow');
            }
        });

        outsideCourtage.change(function () {
            if (!$(this).prop('checked') && !insideCourtage.prop('checked')) {
                $('#courtage-advice-text').hide('slow');
            } else {
                $('#courtage-advice-text').show('slow');
            }
        });

        if ($(isRentedCheckBox).prop('checked')) {
            $('.currently-rented-info').show('slow');
        } else {
            $('.currently-rented-info').hide('slow');
        }
        var isContractTerminatedCheckBox = $('#@Html.IdFor(m => m.Step3HouseForSale.IsActualContractTerminated)');

        isContractTerminatedCheckBox.change(function () {
            if (!$(this).prop('checked')) {
                $('.wt24-is-contract-terminated').show('slow');
                $('#terminated-area-div').show('slow');
            } else {
                $('.wt24-is-contract-terminated').hide('slow');
                $('#terminated-area-div').hide('slow');
            }
        });

        if ($(isContractTerminatedCheckBox).prop('checked')) {
            $('.wt24-is-contract-terminated').show('slow');
            $('#terminated-area-div').show('slow');
        } else {
            $('.wt24-is-contract-terminated').hide('slow');
            $('#terminated-area-div').hide('slow');
        }
    </script>
}
