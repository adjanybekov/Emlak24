using AutoMapper;
using Wohnungstausch24.Core.TypeMapping;
using Wohnungstausch24.Models.Entites.Listings.Objects;
using Wohnungstausch24.Models.Entites.Listings.Objects.Residence.Flat;
using Wohnungstausch24.Models.Entites.Listings.Objects.Residence.Flat.Room;
using Wohnungstausch24.Models.Entites.Listings.Objects.Residence.House;
using Wohnungstausch24.Models.ViewModels.Listings.Steps.Step3.Flat;
using Wohnungstausch24.Models.ViewModels.Listings.Steps.Step3.House;
using Wohnungstausch24.Models.ViewModels.Listings.Steps.Step3.Land;
using Wohnungstausch24.Models.ViewModels.Listings.Steps.Step3.Room;

namespace Wohnungstausch24.Web.Mvc.AutoMappingConfiguration.DtoToEntity
{
    public class Step3ViewModelToListings : IAutoMapperTypeConfigurator
    {
        public void Configure(IMapperConfigurationExpression cfg)
        {
            cfg.CreateMap<Step3FlatForRent, FlatForRent>()
                .ForMember(c => c.AcceptBailLetter, o => o.MapFrom(c => c.AcceptBailLetter))
                .ForMember(c => c.ActualContractTerminatedOn, o => o.MapFrom(c => c.ActualContractTerminatedOn))
                .ForMember(c => c.AdditionalCosts, o => o.MapFrom(c => c.AdditionalCosts))
                .ForMember(c => c.AllInRent, o => o.MapFrom(c => c.AllInRent))
                .ForMember(c => c.AllInRentPrice, o => o.MapFrom(c => c.AllInRentPrice))
                .ForMember(c => c.Bail, o => o.MapFrom(c => c.Bail))
                .ForMember(c => c.BailText, o => o.MapFrom(c => c.BailText))
                .ForMember(c => c.BasicRent, o => o.MapFrom(c => c.BasicRent))
                .ForMember(c => c.Clearance, o => o.MapFrom(c => c.Clearance))
                .ForMember(c => c.ClearanceText, o => o.MapFrom(c => c.ClearanceText))
                .ForMember(c => c.CurrentColdRent, o => o.MapFrom(c => c.CurrentColdRent))
                .ForMember(c => c.EarliestAvailableDate, o => o.MapFrom(c => c.EarliestAvailableDate))
                .ForMember(c => c.FreeTextAvailableFrom, o => o.MapFrom(c => c.FreeTextAvailableFrom))
                .ForMember(c => c.FreeTextPrice, o => o.MapFrom(c => c.FreeTextPrice))
                .ForMember(c => c.HeatingCosts, o => o.MapFrom(c => c.HeatingCosts))
                .ForMember(c => c.IsActualContractTerminated, o => o.MapFrom(c => c.IsActualContractTerminated))
                .ForMember(c => c.IsAllowedToBeIntroducedByAgent, o => o.MapFrom(c => c.IsAllowedToBeIntroducedByAgent))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.IsDateFlexible, o => o.MapFrom(c => c.IsDateFlexible))
                .ForMember(c => c.IsHeatingCostsIncluded, o => o.MapFrom(c => c.IsHeatingCostsIncluded))
                .ForMember(c => c.IsPriceOnDemand, o => o.MapFrom(c => c.IsPriceOnDemand))
                .ForMember(c => c.LatestAvailableDate, o => o.MapFrom(c => c.LatestAvailableDate))
                .ForMember(c => c.OrientationPrice, o => o.MapFrom(c => c.OrientationPrice))
                .ForMember(c => c.Price, o => o.MapFrom(c => c.Price))
                .ForMember(c => c.PublisherType, o => o.MapFrom(c => c.PublisherType))
                .ForMember(c => c.RentalPricePerSqm, o => o.MapFrom(c => c.RentalPricePerSqm))
                .ForMember(c => c.RentSubsidy, o => o.MapFrom(c => c.RentSubsidy))
                .ForMember(c => c.WarmRent, o => o.MapFrom(c => c.WarmRent))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.InsideCourtage, o => o.MapFrom(c => c.InsideCourtage))
                .ForMember(c => c.SpeakToOwner, o => o.MapFrom(c => c.SpeakToOwner))
                .ForAllOtherMembers(c=>c.Ignore());

            cfg.CreateMap<Step3RoomForRent, RoomForRent>()
                .ForMember(c => c.AcceptBailLetter, o => o.MapFrom(c => c.AcceptBailLetter))
                .ForMember(c => c.ActualContractTerminatedOn, o => o.MapFrom(c => c.ActualContractTerminatedOn))
                .ForMember(c => c.AdditionalCosts, o => o.MapFrom(c => c.AdditionalCosts))
                .ForMember(c => c.AllInRent, o => o.MapFrom(c => c.AllInRent))
                .ForMember(c => c.AllInRentPrice, o => o.MapFrom(c => c.AllInRentPrice))
                .ForMember(c => c.Bail, o => o.MapFrom(c => c.Bail))
                .ForMember(c => c.BailText, o => o.MapFrom(c => c.BailText))
                .ForMember(c => c.BasicRent, o => o.MapFrom(c => c.BasicRent))
                .ForMember(c => c.Clearance, o => o.MapFrom(c => c.Clearance))
                .ForMember(c => c.ClearanceText, o => o.MapFrom(c => c.ClearanceText))
                .ForMember(c => c.CurrentColdRent, o => o.MapFrom(c => c.CurrentColdRent))
                .ForMember(c => c.EarliestAvailableDate, o => o.MapFrom(c => c.EarliestAvailableDate))
                .ForMember(c => c.FreeTextAvailableFrom, o => o.MapFrom(c => c.FreeTextAvailableFrom))
                .ForMember(c => c.FreeTextPrice, o => o.MapFrom(c => c.FreeTextPrice))
                .ForMember(c => c.HeatingCosts, o => o.MapFrom(c => c.HeatingCosts))
                .ForMember(c => c.IsActualContractTerminated, o => o.MapFrom(c => c.IsActualContractTerminated))
                .ForMember(c => c.IsAllowedToBeIntroducedByAgent, o => o.MapFrom(c => c.IsAllowedToBeIntroducedByAgent))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.IsDateFlexible, o => o.MapFrom(c => c.IsDateFlexible))
                .ForMember(c => c.IsHeatingCostsIncluded, o => o.MapFrom(c => c.IsHeatingCostsIncluded))
                .ForMember(c => c.IsPriceOnDemand, o => o.MapFrom(c => c.IsPriceOnDemand))
                .ForMember(c => c.LatestAvailableDate, o => o.MapFrom(c => c.LatestAvailableDate))
                .ForMember(c => c.OrientationPrice, o => o.MapFrom(c => c.OrientationPrice))
                .ForMember(c => c.Price, o => o.MapFrom(c => c.Price))
                .ForMember(c => c.PublisherType, o => o.MapFrom(c => c.PublisherType))
                .ForMember(c => c.RentalPricePerSqm, o => o.MapFrom(c => c.RentalPricePerSqm))
                .ForMember(c => c.RentSubsidy, o => o.MapFrom(c => c.RentSubsidy))
                .ForMember(c => c.WarmRent, o => o.MapFrom(c => c.WarmRent))
                .ForMember(c => c.PeriodType, o => o.MapFrom(c => c.PeriodType))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.InsideCourtage, o => o.MapFrom(c => c.InsideCourtage))
                .ForMember(c => c.SpeakToOwner, o => o.MapFrom(c => c.SpeakToOwner))
                .ForAllOtherMembers(c=>c.Ignore());

            cfg.CreateMap<Step3FlatForSale, FlatForSale>()
                .ForMember(c => c.ActualContractTerminatedOn, o => o.MapFrom(c => c.ActualContractTerminatedOn))
                .ForMember(c => c.AdditionalCosts, o => o.MapFrom(c => c.AdditionalCosts))
                .ForMember(c => c.CommonCharge, o => o.MapFrom(c => c.CommonCharge))
                .ForMember(c => c.CourtageAdvice, o => o.MapFrom(c => c.CourtageAdvice))
                .ForMember(c => c.CurrentColdRent, o => o.MapFrom(c => c.CurrentColdRent))
                .ForMember(c => c.EarliestAvailableDate, o => o.MapFrom(c => c.EarliestAvailableDate))
                .ForMember(c => c.FreeTextAvailableFrom, o => o.MapFrom(c => c.FreeTextAvailableFrom))
                .ForMember(c => c.InsideCourtage, o => o.MapFrom(c => c.InsideCourtage))
                .ForMember(c => c.IsActualContractTerminated, o => o.MapFrom(c => c.IsActualContractTerminated))
                .ForMember(c => c.IsAllowedToBeIntroducedByAgent, o => o.MapFrom(c => c.IsAllowedToBeIntroducedByAgent))
                .ForMember(c => c.IsPriceOnDemand, o => o.MapFrom(c => c.IsPriceOnDemand))
                .ForMember(c => c.IsSubjectToCommission, o => o.MapFrom(c => c.IsSubjectToCommission))
                .ForMember(c => c.LatestAvailableDate, o => o.MapFrom(c => c.LatestAvailableDate))
                .ForMember(c => c.MaintenanceSavings, o => o.MapFrom(c => c.MaintenanceSavings))
                .ForMember(c => c.NetYield, o => o.MapFrom(c => c.NetYield))
                .ForMember(c => c.NetYieldActual, o => o.MapFrom(c => c.NetYieldActual))
                .ForMember(c => c.NetYieldDebit, o => o.MapFrom(c => c.NetYieldDebit))
                .ForMember(c => c.OrientationPrice, o => o.MapFrom(c => c.OrientationPrice))
                .ForMember(c => c.OutsideCourtage, o => o.MapFrom(c => c.OutsideCourtage))
                .ForMember(c => c.Price, o => o.MapFrom(c => c.Price))
                .ForMember(c => c.RentalIncomeActual, o => o.MapFrom(c => c.RentalIncomeActual))
                .ForMember(c => c.RentalIncomeDebit, o => o.MapFrom(c => c.RentalIncomeDebit))
                .ForMember(c => c.XTimes, o => o.MapFrom(c => c.XTimes))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.IsWillingToPay, o => o.MapFrom(c => c.IsWillingToPay))
                .ForAllOtherMembers(c => c.Ignore());

            cfg.CreateMap<Step3HouseForRent, HouseForRent>()
                .ForMember(c => c.AcceptBailLetter, o => o.MapFrom(c => c.AcceptBailLetter))
                .ForMember(c => c.ActualContractTerminatedOn, o => o.MapFrom(c => c.ActualContractTerminatedOn))
                .ForMember(c => c.AdditionalCosts, o => o.MapFrom(c => c.AdditionalCosts))
                .ForMember(c => c.AllInRent, o => o.MapFrom(c => c.AllInRent))
                .ForMember(c => c.AllInRentPrice, o => o.MapFrom(c => c.AllInRentPrice))
                .ForMember(c => c.Bail, o => o.MapFrom(c => c.Bail))
                .ForMember(c => c.BailText, o => o.MapFrom(c => c.BailText))
                .ForMember(c => c.BasicRent, o => o.MapFrom(c => c.BasicRent))
                .ForMember(c => c.Clearance, o => o.MapFrom(c => c.Clearance))
                .ForMember(c => c.ClearanceText, o => o.MapFrom(c => c.ClearanceText))
                .ForMember(c => c.CurrentColdRent, o => o.MapFrom(c => c.CurrentColdRent))
                .ForMember(c => c.EarliestAvailableDate, o => o.MapFrom(c => c.EarliestAvailableDate))
                .ForMember(c => c.FreeTextAvailableFrom, o => o.MapFrom(c => c.FreeTextAvailableFrom))
                .ForMember(c => c.FreeTextPrice, o => o.MapFrom(c => c.FreeTextPrice))
                .ForMember(c => c.HeatingCosts, o => o.MapFrom(c => c.HeatingCosts))
                .ForMember(c => c.IsActualContractTerminated, o => o.MapFrom(c => c.IsActualContractTerminated))
                .ForMember(c => c.IsAllowedToBeIntroducedByAgent, o => o.MapFrom(c => c.IsAllowedToBeIntroducedByAgent))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.IsDateFlexible, o => o.MapFrom(c => c.IsDateFlexible))
                .ForMember(c => c.IsHeatingCostsIncluded, o => o.MapFrom(c => c.IsHeatingCostsIncluded))
                .ForMember(c => c.IsPriceOnDemand, o => o.MapFrom(c => c.IsPriceOnDemand))
                .ForMember(c => c.LatestAvailableDate, o => o.MapFrom(c => c.LatestAvailableDate))
                .ForMember(c => c.OrientationPrice, o => o.MapFrom(c => c.OrientationPrice))
                .ForMember(c => c.Price, o => o.MapFrom(c => c.Price))
                .ForMember(c => c.PublisherType, o => o.MapFrom(c => c.PublisherType))
                .ForMember(c => c.RentalPricePerSqm, o => o.MapFrom(c => c.RentalPricePerSqm))
                .ForMember(c => c.RentSubsidy, o => o.MapFrom(c => c.RentSubsidy))
                .ForMember(c => c.SpeakToOwner, o => o.MapFrom(c => c.SpeakToOwner))
                .ForMember(c => c.WarmRent, o => o.MapFrom(c => c.WarmRent))
                .ForAllOtherMembers(c => c.Ignore());

            cfg.CreateMap<Step3HouseForSale, HouseForSale>()
                .ForMember(c => c.ActualContractTerminatedOn, o => o.MapFrom(c => c.ActualContractTerminatedOn))
                .ForMember(c => c.CommonCharge, o => o.MapFrom(c => c.CommonCharge))
                .ForMember(c => c.CourtageAdvice, o => o.MapFrom(c => c.CourtageAdvice))
                .ForMember(c => c.CurrentColdRent, o => o.MapFrom(c => c.CurrentColdRent))
                .ForMember(c => c.EarliestAvailableDate, o => o.MapFrom(c => c.EarliestAvailableDate))
                .ForMember(c => c.FreeTextAvailableFrom, o => o.MapFrom(c => c.FreeTextAvailableFrom))
                .ForMember(c => c.IsActualContractTerminated, o => o.MapFrom(c => c.IsActualContractTerminated))
                .ForMember(c => c.IsAllowedToBeIntroducedByAgent, o => o.MapFrom(c => c.IsAllowedToBeIntroducedByAgent))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.IsPriceOnDemand, o => o.MapFrom(c => c.IsPriceOnDemand))
                .ForMember(c => c.LatestAvailableDate, o => o.MapFrom(c => c.LatestAvailableDate))
                .ForMember(c => c.MaintenanceSavings, o => o.MapFrom(c => c.MaintenanceSavings))
                .ForMember(c => c.OrientationPrice, o => o.MapFrom(c => c.OrientationPrice))
                .ForMember(c => c.Price, o => o.MapFrom(c => c.Price))
                .ForMember(c => c.RentalIncomeActual, o => o.MapFrom(c => c.RentalIncomeActual))
                .ForMember(c => c.RentalIncomeDebit, o => o.MapFrom(c => c.RentalIncomeDebit))
                .ForMember(c => c.IsDateFlexible, o => o.MapFrom(c => c.IsDateFlexible))
                .ForMember(c => c.AdditionalCosts, o => o.MapFrom(c => c.AdditionalCosts))
                .ForMember(c => c.XTimes, o => o.MapFrom(c => c.XTimes))
                .ForMember(c => c.NetYield, o => o.MapFrom(c => c.NetYield))
                .ForMember(c => c.NetYieldDebit, o => o.MapFrom(c => c.NetYieldDebit))
                .ForMember(c => c.NetYieldActual, o => o.MapFrom(c => c.NetYieldActual))
                .ForMember(c => c.InsideCourtage, o => o.MapFrom(c => c.InsideCourtage))
                .ForMember(c => c.IsSubjectToCommission, o => o.MapFrom(c => c.IsSubjectToCommission))
                .ForMember(c => c.OutsideCourtage, o => o.MapFrom(c => c.OutsideCourtage))
                .ForMember(c => c.IsWillingToPay, o => o.MapFrom(c => c.IsWillingToPay))
                .ForAllOtherMembers(c => c.Ignore());

            cfg.CreateMap<Step3LandForSale, LandForSale>()
                .ForMember(c => c.ComissionFee, o => o.MapFrom(c => c.ComissionFee))
                .ForMember(c => c.CommonCharge, o => o.MapFrom(c => c.CommonCharge))
                .ForMember(c => c.CourtageAdvice, o => o.MapFrom(c => c.CourtageAdvice))
                .ForMember(c => c.EarliestAvailableDate, o => o.MapFrom(c => c.EarliestAvailableDate))
                .ForMember(c => c.FreeTextAvailableFrom, o => o.MapFrom(c => c.FreeTextAvailableFrom))
                .ForMember(c => c.FreeTextPrice, o => o.MapFrom(c => c.FreeTextPrice))
                .ForMember(c => c.InsideCourtage, o => o.MapFrom(c => c.InsideCourtage))
                .ForMember(c => c.IsAllowedToBeIntroducedByAgent, o => o.MapFrom(c => c.IsAllowedToBeIntroducedByAgent))
                .ForMember(c => c.IsCurrentlyRented, o => o.MapFrom(c => c.IsCurrentlyRented))
                .ForMember(c => c.IsDateFlexible, o => o.MapFrom(c => c.IsDateFlexible))
                .ForMember(c => c.IsPriceOnDemand, o => o.MapFrom(c => c.IsPriceOnDemand))
                .ForMember(c => c.IsSubjectToCommission, o => o.MapFrom(c => c.IsSubjectToCommission))
                .ForMember(c => c.LatestAvailableDate, o => o.MapFrom(c => c.LatestAvailableDate))
                .ForMember(c => c.OrientationPrice, o => o.MapFrom(c => c.OrientationPrice))
                .ForMember(c => c.OutsideCourtage, o => o.MapFrom(c => c.OutsideCourtage))
                .ForMember(c => c.Price, o => o.MapFrom(c => c.Price))
                .ForMember(c => c.PublisherType, o => o.Ignore())
                .ForMember(c => c.PurchasePricePerSqm, o => o.MapFrom(c => c.PurchasePricePerSqm))
                .ForMember(c => c.IsWillingToPay, o => o.MapFrom(c => c.IsWillingToPay))
                .ForAllOtherMembers(c => c.Ignore());
        }
    }
}